# Generated by Django 4.2 on 2025-05-09 04:26

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Branch_master",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("branch_name", models.CharField(max_length=50, unique=True)),
                ("co_id", models.CharField(default="c", max_length=10)),
                ("branch_id", models.IntegerField(default=1)),
                (
                    "financial_year",
                    models.CharField(default="2024-2025", max_length=10),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("brand_name", models.CharField(max_length=250)),
                ("brand_custom_id", models.IntegerField(default=0)),
                ("co_id", models.CharField(default="c", max_length=10)),
                ("branch_id", models.CharField(default="branch", max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Employee_master",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("employee_custom_id", models.IntegerField(blank=True, null=True)),
                ("employee_name", models.CharField(max_length=100)),
                ("address_1", models.CharField(max_length=255)),
                ("address_2", models.CharField(max_length=255)),
                ("address_3", models.CharField(max_length=255)),
                (
                    "telephone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None
                    ),
                ),
                (
                    "mobile",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None
                    ),
                ),
                (
                    "working_status",
                    models.CharField(
                        choices=[("YES", "YES"), ("NO", "NO")], max_length=10
                    ),
                ),
                ("designation", models.CharField(max_length=100)),
                ("department", models.CharField(max_length=100)),
                (
                    "salary",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=10, max_length=10
                    ),
                ),
                (
                    "esi",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=10, max_length=10
                    ),
                ),
                (
                    "pf",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=10, max_length=10
                    ),
                ),
                ("date_joining", models.DateField()),
                ("bank_name", models.CharField(max_length=100)),
                ("branch", models.CharField(max_length=100)),
                ("ifsc_code", models.CharField(max_length=100)),
                ("casual_leaves", models.IntegerField(default=12)),
                ("co_id", models.CharField(default="c", max_length=10)),
                ("branch_id", models.CharField(default="branch", max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Table_Accountsmaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("account_code", models.IntegerField(blank=True, null=True)),
                ("head", models.CharField(max_length=100)),
                (
                    "group",
                    models.CharField(
                        choices=[
                            ("LIABILITIES", "LIABILITIES"),
                            ("INCOME", "INCOME"),
                            ("EXPENSES", "EXPENSES"),
                            ("TRADING EXPENSES", "TRADING EXPENSES"),
                            ("TRADING INCOME", "TRADING INCOME"),
                            ("CURRENT ASSET", "CURRENT ASSET"),
                            ("FIXED ASSETS", "FIXED ASSETS"),
                            ("CURRENT LIABILITIES", "CURRENT LIABILITIES"),
                            ("INDIRECT INCOME", "INDIRECT INCOME"),
                            ("INDIRECT EXPENSES", "INDIRECT EXPENSES"),
                            ("SUNDRY DEBTORS", "SUNDRY DEBTORS"),
                            ("SUNDRY CREDITORS", "SUNDRY CREDITORS"),
                            ("CASH AT BANK", "CASH AT BANK"),
                            ("DUTIES AND TAXES", "DUTIES AND TAXES"),
                            ("LOANS", "LOANS"),
                            ("CAPITAL ACCOUNT", "CAPITAL ACCOUNT"),
                        ],
                        max_length=249,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("Accounts", "Accounts"),
                            ("Cashbook", "Cashbook"),
                            ("Bank", "Bank"),
                            ("Customers", "Customers"),
                            ("Suppliers", "Suppliers"),
                        ],
                        max_length=249,
                    ),
                ),
                (
                    "pricegroup",
                    models.CharField(
                        blank=True,
                        choices=[("1", "1"), ("2", "2"), ("3", "3"), ("4", "4")],
                        max_length=249,
                        null=True,
                    ),
                ),
                (
                    "debitcredit",
                    models.CharField(
                        choices=[("Debit", "Debit"), ("Credit", "Credit")],
                        max_length=249,
                    ),
                ),
                ("gstno", models.CharField(blank=True, max_length=255, null=True)),
                ("address1", models.CharField(blank=True, max_length=299, null=True)),
                ("state", models.CharField(blank=True, max_length=249, null=True)),
                ("address2", models.CharField(blank=True, max_length=299, null=True)),
                ("statecode", models.CharField(blank=True, max_length=249, null=True)),
                ("address3", models.CharField(blank=True, max_length=249, null=True)),
                ("panno", models.CharField(blank=True, max_length=249, null=True)),
                ("district", models.CharField(blank=True, max_length=249, null=True)),
                (
                    "creditlimit",
                    models.CharField(blank=True, max_length=249, null=True),
                ),
                ("email", models.CharField(blank=True, max_length=249, null=True)),
                ("creditdays", models.CharField(blank=True, max_length=249, null=True)),
                ("telno", models.CharField(blank=True, max_length=50, null=True)),
                ("mobile", models.CharField(blank=True, max_length=10, null=True)),
                ("opbalance", models.IntegerField(blank=True, default=0, null=True)),
                ("whattsapp", models.CharField(blank=True, max_length=249, null=True)),
                (
                    "currentbalance",
                    models.CharField(blank=True, max_length=249, null=True),
                ),
                ("tax", models.FloatField(default=0.0)),
                ("slug", models.SlugField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Table_Companydetailsmaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_id", models.CharField(max_length=1, unique=True)),
                ("companyname", models.CharField(max_length=50, unique=True)),
                ("address1", models.CharField(max_length=50)),
                ("address2", models.CharField(blank=True, max_length=50, null=True)),
                ("address3", models.CharField(blank=True, max_length=50, null=True)),
                ("pinCode", models.IntegerField()),
                ("phoneno", models.CharField(blank=True, max_length=20, null=True)),
                ("mobile", models.CharField(blank=True, max_length=20, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("gst", models.CharField(max_length=30, unique=True)),
                ("pan", models.CharField(blank=True, max_length=30, null=True)),
                ("finyearfrom", models.DateField()),
                ("finyearto", models.DateField(blank=True, null=True)),
                ("slug", models.SlugField(blank=True, max_length=250, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model_name", models.CharField(max_length=100)),
                (
                    "fuel",
                    models.CharField(
                        choices=[
                            ("PETROL", "PETROL"),
                            ("CNG", "CNG"),
                            ("ELECTRIC", "ELECTRIC"),
                            ("DIESEL", "DIESEL"),
                        ],
                        max_length=10,
                    ),
                ),
                ("co_id", models.CharField(default="c", max_length=10)),
                ("branch_id", models.CharField(default="branch", max_length=50)),
                (
                    "brand_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.brand",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VoucherConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("receipt", "Receipt"),
                            ("payment", "Payment"),
                            ("Debit Note", "Debit Note"),
                            ("Credit Note", "Credit Note"),
                            ("Contra Entry", "Contra Entry"),
                            ("Journal Entry", "Journal Entry"),
                            ("Trip sheet", "Trip sheet"),
                            ("Sales", "Sales"),
                        ],
                        max_length=255,
                    ),
                ),
                ("series", models.CharField(max_length=255)),
                ("serial_no", models.IntegerField()),
                (
                    "branch",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.branch_master",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.table_companydetailsmaster",
                    ),
                ),
            ],
            options={
                "unique_together": {("category", "series")},
            },
        ),
        migrations.CreateModel(
            name="Vehicle_type",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vehicle_name", models.CharField(max_length=100)),
                ("vehicle_type_custom_id", models.IntegerField(blank=True, null=True)),
                ("co_id", models.CharField(default="c", max_length=10)),
                ("branch_id", models.CharField(default="branch", max_length=50)),
                (
                    "brand_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.brand",
                    ),
                ),
                (
                    "vehicle_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.vehicle",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vehicle_master",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rc_owner_id", models.PositiveIntegerField(blank=True, null=True)),
                ("rc_owner_name", models.CharField(max_length=100)),
                (
                    "mobile",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None
                    ),
                ),
                (
                    "fuel",
                    models.CharField(
                        choices=[
                            ("PETROL", "PETROL"),
                            ("CNG", "CNG"),
                            ("ELECTRIC", "ELECTRIC"),
                            ("DIESEL", "DIESEL"),
                        ],
                        max_length=10,
                    ),
                ),
                ("registration_number", models.CharField(max_length=20)),
                ("make_year", models.PositiveIntegerField()),
                ("chase_number", models.CharField(max_length=50)),
                ("engine_number", models.CharField(max_length=50)),
                ("insurance_renewal", models.DateField()),
                ("pollution_renewal", models.DateField()),
                ("co_id", models.CharField(default="c", max_length=10)),
                ("branch_id", models.CharField(default="branch", max_length=50)),
                (
                    "brand_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.brand",
                    ),
                ),
                (
                    "driver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.employee_master",
                    ),
                ),
                (
                    "vehicle_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.vehicle",
                    ),
                ),
                (
                    "vehicle_type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.vehicle_type",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Trip_sheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("series", models.CharField(default="default", max_length=100)),
                ("entry_number", models.CharField(max_length=100)),
                ("loading_date", models.DateField()),
                ("unloading_date", models.DateField()),
                ("sl_no", models.PositiveIntegerField(blank=True, null=True)),
                ("loading_point", models.CharField(max_length=100)),
                ("unloading_point", models.CharField(max_length=100)),
                ("product", models.CharField(max_length=100)),
                ("remark", models.CharField(max_length=100)),
                ("starting_km", models.FloatField(blank=True, null=True)),
                ("ending_km", models.FloatField(blank=True, null=True)),
                ("km_rate", models.FloatField(blank=True, null=True)),
                ("filling_km", models.FloatField(blank=True, null=True)),
                (
                    "payment_by",
                    models.CharField(
                        choices=[
                            ("CASH", "CASH"),
                            ("CREDIT", "CREDIT"),
                            ("GOOGLE PAY", "GOOGLE PAY"),
                            ("CARD", "CARD"),
                        ],
                        max_length=12,
                    ),
                ),
                ("tyre_work", models.FloatField(blank=True, null=True)),
                ("battery", models.FloatField(blank=True, null=True)),
                ("mech_electric", models.FloatField(blank=True, null=True)),
                ("statutory_charge", models.FloatField(blank=True, null=True)),
                ("statutory_narration", models.CharField(max_length=50)),
                ("total_km", models.FloatField(blank=True, null=True)),
                (
                    "km_charge_total",
                    models.FloatField(blank=True, default=0.0, null=True),
                ),
                (
                    "extra_hour_charge_total",
                    models.FloatField(blank=True, default=0.0, null=True),
                ),
                ("fixed_charge_total", models.FloatField(blank=True, null=True)),
                (
                    "haulting_charge_total",
                    models.FloatField(blank=True, default=0.0, null=True),
                ),
                (
                    "toll_parking_total",
                    models.FloatField(blank=True, default=0.0, null=True),
                ),
                ("diesel_ltr", models.FloatField(blank=True, null=True)),
                ("diesel_charges", models.FloatField(blank=True, null=True)),
                ("advance_driver", models.FloatField(blank=True, null=True)),
                ("driver_bata", models.FloatField(blank=True, null=True)),
                ("advance_from_customer", models.FloatField(blank=True, null=True)),
                ("total_freight_charges", models.FloatField(blank=True, null=True)),
                ("account_code", models.IntegerField(blank=True, null=True)),
                ("co_id", models.CharField(default="c", max_length=10)),
                ("branch_id", models.CharField(default="branch", max_length=50)),
                (
                    "financial_year",
                    models.CharField(default="2024-2025", max_length=10),
                ),
                ("user", models.CharField(default="user", max_length=50)),
                (
                    "customer_name",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.table_accountsmaster",
                    ),
                ),
                (
                    "driver_name_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.employee_master",
                    ),
                ),
                (
                    "series_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.voucherconfiguration",
                    ),
                ),
                (
                    "vehicle_number_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.vehicle_master",
                    ),
                ),
                (
                    "vehicle_type_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.vehicle_type",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Table_companyDetailschild",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fycode", models.CharField(max_length=20)),
                ("finyearfrom", models.CharField(max_length=19)),
                ("finyearto", models.CharField(blank=True, max_length=10, null=True)),
                ("databasename1", models.CharField(max_length=50)),
                (
                    "company_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.table_companydetailsmaster",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Table_BillMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bill_no", models.PositiveIntegerField()),
                ("bill_date", models.DateField()),
                ("gst_type", models.CharField(default="gst", max_length=25)),
                ("bill_type", models.CharField(max_length=55)),
                ("date_from", models.DateField()),
                ("date_to", models.DateField()),
                ("sp_disc_perc", models.FloatField(default=0.0)),
                ("sp_disc_amt", models.FloatField(default=0.0)),
                ("round_off", models.FloatField(default=0.0)),
                ("total_discounts", models.FloatField(default=0.0)),
                ("total_gross", models.FloatField()),
                ("amt_before_tax", models.FloatField()),
                ("cgst", models.FloatField(default=0.0)),
                ("sgst", models.FloatField(default=0.0)),
                ("igst", models.FloatField(default=0.0)),
                ("grand_total", models.FloatField()),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.table_accountsmaster",
                    ),
                ),
                (
                    "series",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.voucherconfiguration",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Table_BillItems",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.PositiveIntegerField()),
                ("vehicle_no", models.CharField(max_length=30)),
                ("vehicle_type", models.CharField(max_length=90)),
                ("km_rate", models.FloatField()),
                ("ehr_rate", models.FloatField(blank=True, null=True)),
                ("fixed_charge", models.FloatField()),
                ("toll_parking", models.FloatField(blank=True, null=True)),
                ("haulting", models.FloatField(blank=True, null=True)),
                ("monthly_fixed_charge", models.FloatField(default=0.0)),
                ("tax", models.FloatField()),
                ("gross_amount", models.FloatField()),
                ("net_value", models.FloatField()),
                (
                    "master",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.table_billmaster",
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.trip_sheet",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.table_companydetailsmaster",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Table_Acntchild",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("account_code", models.CharField(max_length=20)),
                ("openning_balance", models.CharField(max_length=19)),
                ("current_balance", models.CharField(max_length=10)),
                ("debit_Credit", models.CharField(max_length=10)),
                ("disp", models.CharField(max_length=10)),
                ("company_id", models.CharField(max_length=10)),
                ("branch_id", models.CharField(max_length=10)),
                ("fyc_code", models.CharField(max_length=10)),
                (
                    "account_master",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="main.table_accountsmaster",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="table_accountsmaster",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="main.table_companydetailsmaster",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="branch",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="branch_users",
                to="main.branch_master",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="company",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="company_users",
                to="main.table_companydetailsmaster",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
